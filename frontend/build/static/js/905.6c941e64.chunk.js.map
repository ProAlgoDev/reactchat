{"version":3,"file":"static/js/905.6c941e64.chunk.js","mappings":"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","sources":["../node_modules/hey-listen/dist/hey-listen.es.js","../node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/store-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/handoff.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/process.mjs","../node_modules/framer-motion/dist/es/utils/warn-once.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/features-max.mjs"],"sourcesContent":["var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    const origin = keyframes[0];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframes.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restSpeed = 2, restDelta = 0.01, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(target - origin) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes.length > 2 ? \"keyframes\" : type];\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls.stop();\n        },\n        sample: (t) => {\n            return animation.next(Math.max(0, t));\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    let { keyframes, duration = 0.3, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        const sampleAnimation = animate(options);\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        let t = 0;\n        while (!state.done) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return () => {\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        const { currentTime } = animation;\n        if (currentTime) {\n            const sampleAnimation = animate(options);\n            value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n        }\n        sync.update(() => animation.cancel());\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        return () => { };\n    };\n    return elapsed ? delay(setValue, -elapsed) : setValue();\n}\n\nexport { createInstantAnimation };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\nimport { supports } from './waapi/supports.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            const animation = inertia(options);\n            return () => animation.stop();\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        const canAccelerateAnimation = supports.waapi() &&\n            acceleratedValues.has(valueName) &&\n            !options.repeatDelay &&\n            options.repeatType !== \"mirror\" &&\n            options.damping !== 0 &&\n            visualElement &&\n            element instanceof HTMLElement &&\n            !visualElement.getProps().onUpdate;\n        if (canAccelerateAnimation) {\n            /**\n             * If this animation is capable of being run via WAAPI, then do so.\n             */\n            return createAcceleratedAnimation(value, valueName, options);\n        }\n        else {\n            /**\n             * Otherwise, fall back to the main thread.\n             */\n            const animation = animate(options);\n            return () => animation.stop();\n        }\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"7.10.3\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation) {\n            this.stopAnimation();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const appearStoreId = (id, value) => `${id}: ${value}`;\n\nexport { appearStoreId };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { appearStoreId } from './store-id.mjs';\n\nfunction handoffOptimizedAppearAnimation(id, name) {\n    const { MotionAppearAnimations } = window;\n    const animationId = appearStoreId(id, transformProps.has(name) ? \"transform\" : name);\n    const animation = MotionAppearAnimations && MotionAppearAnimations.get(animationId);\n    if (animation) {\n        /**\n         * We allow the animation to persist until the next frame:\n         *   1. So it continues to play until Framer Motion is ready to render\n         *      (avoiding a potential flash of the element's original state)\n         *   2. As all independent transforms share a single transform animation, stopping\n         *      it synchronously would prevent subsequent transforms from handing off.\n         */\n        sync.render(() => {\n            /**\n             * Animation.cancel() throws so it needs to be wrapped in a try/catch\n             */\n            try {\n                animation.cancel();\n                MotionAppearAnimations.delete(animationId);\n            }\n            catch (e) { }\n        });\n        return animation.currentTime || 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport { handoffOptimizedAppearAnimation };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { handoffOptimizedAppearAnimation } from '../../animation/optimized-appear/handoff.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (!value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = handoffOptimizedAppearAnimation(appearId, key);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","/**\n * Browser-safe usage of process\n */\nconst defaultEnvironment = \"production\";\nconst env = typeof process === \"undefined\" || process.env === undefined\n    ? defaultEnvironment\n    : process.env.NODE_ENV || defaultEnvironment;\n\nexport { env };\n","const warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.10.3\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.10.3 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { drag } from '../../motion/features/drag.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { domAnimation } from './features-animation.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\n/**\n * @public\n */\nconst domMax = {\n    ...domAnimation,\n    ...drag,\n    ...layoutFeatures,\n    projectionNodeConstructor: HTMLProjectionNode,\n};\n\nexport { domMax };\n"],"names":["warning","invariant","isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","defaultPagePoint","pageX","pageY","pointFromTouch","e","pointType","arguments","length","undefined","point","changedTouches","x","y","pointFromMouse","extractEventInfo","wrapHandler","handler","listener","eventHandler","button","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","window","callback","requestAnimationFrame","setTimeout","frameData","delta","timestamp","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","reduce","acc","key","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","add","indexOf","push","cancel","index","splice","delete","process","i","has","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","Math","max","min","forEach","secondsToMilliseconds","seconds","addDomEvent","target","eventName","options","passive","addEventListener","removeEventListener","useDomEvent","ref","useEffect","element","current","supportsPointerEvents","isBrowser","onpointerdown","supportsTouchEvents","ontouchstart","supportsMouseEvents","onmousedown","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","name","addPointerEvent","usePointerEvent","combineFunctions","a","b","v","pipe","_len","transformers","Array","_key","distance","abs","PanSession","constructor","handlers","transformPagePoint","this","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","sqrt","distance2D","offset","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","update","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","_ref","lastDevicePoint","startDevicePoint","velocity","getVelocity","timeDelta","timestampedPoint","lastPoint","time","currentVelocity","Infinity","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","progress","from","to","value","toFromDifference","mix","calcLength","axis","isNear","maxDistance","calcAxisDelta","source","origin","originPoint","scale","isNaN","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","parent","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","AnimationType","createDelta","createBox","eachAxis","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","hasTransform","values","has2DTranslate","z","rotate","rotateX","rotateY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","_ref2","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","transform","measureViewportBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","instantAnimationState","mirrorEasing","easing","p","reverseEasing","easeIn","easeOut","easeInOut","isColorString","type","testProp","Boolean","isString","singleColorRegex","test","startsWith","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","c","alpha","match","floatRegex","parseFloat","rgbUnit","number","round","clamp","clampRgbUnit","rgba","parse","red","green","blue","alpha$1","sanitize","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","percent","color","hueToRgb","q","t","mixLinearColor","fromExpo","colorTypes","asRGBA","find","concat","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","colorRegex","replace","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_a","_b","getAnimatableNone","parsed","transformer","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","isArray","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","definition","x1","y1","x2","y2","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","state","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","next","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","velocityPerSecond","frameDuration","durationKeys","physicsKeys","isSpringType","keys","some","spring","restSpeed","restDelta","isResolvedFromDuration","springOptions","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","framesync","passTimestamp","start","stop","animate","driver","repeat","repeatMax","repeatType","repeatDelay","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","driverControls","latest","interpolateFromNumber","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","animation","delay","reverseElapsed","hasRepeatDelayElapsed","sample","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","createAcceleratedAnimation","valueName","sampleAnimation","pregeneratedKeyframes","fill","iterations","direction","animateStyle","owner","onfinish","set","currentTime","setWithVelocity","timeout","checkElapsed","read","createInstantAnimation","setValue","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","rotateZ","opacity","backgroundColor","default","getDefaultTransition","valueKey","isAnimatable","maxDefaults","Set","applyDefaultFilter","slice","split","unit","defaultValue","functionRegex","filter","functions","join","defaultValueTypes","numberValueTypes","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZero","getZeroUnit","potentialUnitType","getValueTransition","transition","featureTests","waapi","Element","results","supports","acceleratedValues","createMotionValueAnimation","valueTransition","isTargetAnimatable","get","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","findNearestBoundary","startAnimation","startSpring","boundary","heading","prev","checkBoundary","inertia","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","visualElement","HTMLElement","getProps","elementDragControls","WeakMap","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","isPresent","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","animationState","setActive","Drag","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","render","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","isRefObject","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","Promise","all","then","dragKey","toUpperCase","externalMotionValue","getValue","initial","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","motionValue","props","useUnmountEffect","makeRenderlessComponent","hook","pan","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","useRef","useContext","MotionConfigContext","dragControls","groupDragControls","useConstant","subscribe","usePresence","context","PresenceContext","onExitComplete","register","id","useId","safeToRemove","pixelsToPercent","pixels","correctBorderRadius","correct","node","px","isCSSVariable","cssVariableRegex","maxDepth","getVariableValue","depth","token","fallback","exec","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trim","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","includes","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","setOptions","globalProjectionState","hasEverUpdated","getSnapshotBeforeUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","postRender","getStack","members","componentDidUpdate","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","layoutFeatures","measureLayout","LayoutGroupContext","SwitchLayoutGroupContext","shallowCompare","prevLength","isZeroValueString","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","clear","MotionValue","init","_this","version","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","clearListeners","eventManagers","attach","passiveEffect","getPrevious","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","testValueType","dimensionValueTypes","degrees","vw","vh","findDimensionValueType","valueTypes","findValueType","resolveVariant","custom","resolveVariantFromProps","getCurrent","setMotionValue","hasValue","addValue","setTarget","transitionEnd","makeTargetAnimatable","resolveFinalValueInKeyframes","getOriginFromTransition","isWillChangeMotionValue","isMotionValue","appearStoreId","handoffOptimizedAppearAnimation","MotionAppearAnimations","animationId","transformProps","optimizedAppearDataAttribute","camelToDash","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","size","forwardDelay","animations","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","willChange","animationTypeState","getState","valueTarget","shouldBlockAnimation","shouldReduceMotion","appearId","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","InView","Focus","Hover","Tap","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","prop","propIsVariant","isVariantLabel","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","isAnimationControls","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","isKeyframesTarget","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","exit","presenceContext","createHoverEvent","isNodeOrChild","parentElement","env","warned","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","useIntersectionObserver","shouldObserve","margin","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","_ref3","message","console","warn","gestureAnimations","inView","whileInView","viewport","tap","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","onPointerUp","onPointerCancel","focus","whileFocus","onFocus","onBlur","hover","onHoverStart","onHoverEnd","whileHover","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","BoundingBoxDimension","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","transformPropOrder","positionalValues","width","paddingLeft","paddingRight","height","_ref4","_ref5","paddingTop","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","_ref12","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","featureDefinitions","numFeatures","propEventHandlers","VisualElement","reducedMotionConfig","visualState","children","isVariantNode","isControllingVariants","Map","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","latestValues","triggerBuild","renderInstance","renderState","scheduleRender","baseTarget","initialValues","initialMotionValues","scrapeMotionValuesFromProps","_props","mount","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","setProps","unmount","_c","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","loadFeatures","renderedProps","isStrict","preloadedFeatures","projectionId","ProjectionNodeConstructor","initialLayoutGroupConfig","features","isEnabled","Component","createElement","layoutScroll","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","getVariant","variants","getClosestVariantNode","numVariantProps","variantProps","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","vars","isMounted","transformValues","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","buildHTMLStyles","styleProp","renderHTML","SVGVisualElement","super","isSVGTag","camelCaseAttributes","getAttribute","buildSVGAttrs","renderSVG","tagName","domAnimation","renderer","createDomVisualElement","isSVGComponent","enableHardwareAcceleration","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","_d","_e","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","hasAnimatedSinceResize","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","getPrevLead","hasRotate","resetValues","getProjectionStyles","styles","visibility","pointerEvents","resolveMotionValue","emptyStyles","valuesToRender","transformOrigin","scaleCorrectors","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","domMax","projectionNodeConstructor","documentNode","position"],"sourceRoot":""}