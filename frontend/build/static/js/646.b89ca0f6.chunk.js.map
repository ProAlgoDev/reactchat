{"version":3,"file":"static/js/646.b89ca0f6.chunk.js","mappings":"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","sources":["components/hook-form/FormProvider.js","components/Image/Image.js","components/upload/preview/AvatarPreview.js","components/upload/UploadAvatar.js","components/hook-form/RHFUpload.js","components/hook-form/RHFTextField.js","sections/Dashboard/Settings/ProfileForm.js","pages/dashboard/Settings/Profile.js","../node_modules/phosphor-react/src/icons/CaretLeft.tsx"],"sourcesContent":["import PropTypes from 'prop-types';\n// form\nimport { FormProvider as Form } from 'react-hook-form';\n\n// ----------------------------------------------------------------------\n\nFormProvider.propTypes = {\n  children: PropTypes.node,\n  methods: PropTypes.object,\n  onSubmit: PropTypes.func,\n};\n\nexport default function FormProvider({ children, onSubmit, methods }) {\n  return (\n    <Form {...methods}>\n      <form onSubmit={onSubmit}>{children}</form>\n    </Form>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n// @mui\nimport { Box } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst Image = forwardRef(\n  ({ disabledEffect = false, effect = 'blur', sx, ...other }, ref) => {\n    const content = (\n      <Box\n        component={LazyLoadImage}\n        wrapperClassName=\"wrapper\"\n        effect={disabledEffect ? undefined : effect}\n        placeholderSrc={disabledEffect ? '/assets/transparent.png' : '/assets/placeholder.svg'}\n        sx={{ width: 1, height: 1, objectFit: 'cover' }}\n        {...other}\n      />\n    );\n\n    return (\n      <Box\n        ref={ref}\n        component=\"span\"\n        sx={{\n          lineHeight: 1,\n          display: 'block',\n          overflow: 'hidden',\n          position: 'relative',\n          '& .wrapper': {\n            width: 1,\n            height: 1,\n            backgroundSize: 'cover !important',\n          },\n          ...sx,\n        }}\n      >\n        {content}\n      </Box>\n    );\n  }\n);\n\nImage.propTypes = {\n  sx: PropTypes.object,\n  effect: PropTypes.string,\n  disabledEffect: PropTypes.bool,\n};\n\nexport default Image;\n","import PropTypes from 'prop-types';\n//\nimport Image from '../../Image';\n\n// ----------------------------------------------------------------------\n\nAvatarPreview.propTypes = {\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default function AvatarPreview({ file }) {\n  if (!file) {\n    return null;\n  }\n\n  const imgUrl = typeof file === 'string' ? file : file.preview;\n\n  return (\n    <Image\n      alt=\"avatar\"\n      src={imgUrl}\n      sx={{\n        zIndex: 8,\n        overflow: 'hidden',\n        borderRadius: '50%',\n        position: 'absolute',\n        width: `calc(100% - 16px)`,\n        height: `calc(100% - 16px)`,\n      }}\n    />\n  );\n}\n","import PropTypes from \"prop-types\";\nimport { useDropzone } from \"react-dropzone\";\n// @mui\nimport { Typography } from \"@mui/material\";\nimport { styled, alpha } from \"@mui/material/styles\";\n//\nimport AvatarPreview from \"./preview/AvatarPreview\";\nimport { Image } from \"phosphor-react\";\n\n// ----------------------------------------------------------------------\n\nconst StyledDropZone = styled(\"div\")(({ theme }) => ({\n  width: 144,\n  height: 144,\n  margin: \"auto\",\n  display: \"flex\",\n  cursor: \"pointer\",\n  overflow: \"hidden\",\n  borderRadius: \"50%\",\n  alignItems: \"center\",\n  position: \"relative\",\n  justifyContent: \"center\",\n  border: `1px dashed ${alpha(theme.palette.grey[500], 0.32)}`,\n}));\n\nconst StyledPlaceholder = styled(\"div\")(({ theme }) => ({\n  zIndex: 7,\n  display: \"flex\",\n  borderRadius: \"50%\",\n  position: \"absolute\",\n  alignItems: \"center\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  width: `calc(100% - 16px)`,\n  height: `calc(100% - 16px)`,\n  color: theme.palette.text.disabled,\n  backgroundColor: theme.palette.background.neutral,\n  transition: theme.transitions.create(\"opacity\", {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter,\n  }),\n}));\n\n// ----------------------------------------------------------------------\n\nUploadAvatar.propTypes = {\n  sx: PropTypes.object,\n  error: PropTypes.bool,\n  disabled: PropTypes.bool,\n  helperText: PropTypes.node,\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default function UploadAvatar({\n  error,\n  file,\n  disabled,\n  helperText,\n  sx,\n  ...other\n}) {\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragReject,\n  } = useDropzone({\n    multiple: false,\n    disabled,\n    ...other,\n  });\n\n  const hasFile = !!file;\n\n  const isError = isDragReject || !!error;\n\n  return (\n    <>\n      <StyledDropZone\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && {\n            opacity: 0.72,\n          }),\n          ...(isError && {\n            borderColor: \"error.light\",\n            ...(hasFile && {\n              bgcolor: \"error.lighter\",\n            }),\n          }),\n          ...(disabled && {\n            opacity: 0.48,\n            pointerEvents: \"none\",\n          }),\n          ...(hasFile && {\n            \"&:hover\": {\n              \"& .placeholder\": {\n                opacity: 1,\n              },\n            },\n          }),\n          ...sx,\n        }}\n      >\n        <input {...getInputProps()} />\n\n        {hasFile && <AvatarPreview file={file} />}\n\n        <StyledPlaceholder\n          className=\"placeholder\"\n          sx={{\n            \"&:hover\": {\n              opacity: 0.72,\n            },\n            ...(hasFile && {\n              zIndex: 9,\n              opacity: 0,\n              color: \"common.white\",\n              bgcolor: (theme) => alpha(theme.palette.grey[900], 0.64),\n            }),\n            ...(isError && {\n              color: \"error.main\",\n              bgcolor: \"error.lighter\",\n            }),\n          }}\n        >\n          <Image />\n\n          <Typography variant=\"caption\">\n            {file ? \"Update photo\" : \"Upload photo\"}\n          </Typography>\n        </StyledPlaceholder>\n      </StyledDropZone>\n\n      {helperText && helperText}\n    </>\n  );\n}","import PropTypes from 'prop-types';\n// form\nimport { useFormContext, Controller } from 'react-hook-form';\n// @mui\nimport { FormHelperText } from '@mui/material';\n//\nimport { UploadAvatar } from '../upload';\n\n// ----------------------------------------------------------------------\n\nRHFUploadAvatar.propTypes = {\n  name: PropTypes.string,\n};\n\n// ----------------------------------------------------------------------\n\nexport function RHFUploadAvatar({ name, ...other }) {\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <div>\n          <UploadAvatar\n            accept={{\n              'image/*': [],\n            }}\n            error={!!error}\n            file={field.value}\n            {...other}\n          />\n\n          {!!error && (\n            <FormHelperText error sx={{ px: 2, textAlign: 'center' }}>\n              {error.message}\n            </FormHelperText>\n          )}\n        </div>\n      )}\n    />\n  );\n}\n\n","import PropTypes from 'prop-types';\n// form\nimport { useFormContext, Controller } from 'react-hook-form';\n// @mui\nimport { TextField } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nRHFTextField.propTypes = {\n  name: PropTypes.string,\n  helperText: PropTypes.node,\n};\n\nexport default function RHFTextField({ name, helperText, ...other }) {\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <TextField\n          {...field}\n          fullWidth\n          \n          value={typeof field.value === 'number' && field.value === 0 ? '' : field.value}\n          error={!!error}\n          helperText={error ? error?.message : helperText}\n          {...other}\n        />\n      )}\n    />\n  );\n}\n","import React, { useCallback, useState } from \"react\";\nimport * as Yup from \"yup\";\n// form\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport FormProvider from \"../../../components/hook-form/FormProvider\";\nimport { RHFTextField, RHFUploadAvatar } from \"../../../components/hook-form\";\nimport { Stack } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { UpdateUserProfile } from \"../../../redux/slices/app\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst ProfileForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [file, setFile] = useState();\n  const [isModified, setModified] = useState(false);\n  const { user } = useSelector((state) => state.app);\n\n  const ProfileSchema = Yup.object().shape({\n    firstName: Yup.string().required(\"Name is required\"),\n    about: Yup.string().required(\"About is required\"),\n    avatar: Yup.string().required(\"Avatar is required\").nullable(true),\n  });\n\n  const defaultValues = {\n    firstName: user?.firstName,\n    lastName: user?.lastName,\n    about: user?.about,\n    avatar: `${user?.avatar}`,\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(ProfileSchema),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    watch,\n    control,\n    setValue,\n    handleSubmit,\n    formState: { isSubmitting, isSubmitSuccessful },\n  } = methods;\n\n  const values = watch();\n\n  const onSubmit = async (data) => {\n    try {\n      //   Send API request\n      // console.log(\"DATA\", data);\n      await dispatch(\n        UpdateUserProfile({\n          firstName: data?.firstName,\n          about: data?.about,\n          avatar: file,\n          isPictureModified: isModified,\n        })\n      ).then(\n        navigate(-1)\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDrop = useCallback(\n    (acceptedFiles) => {\n      const file = acceptedFiles[0];\n      console.log(file)\n      setFile(file);\n      setModified(true);\n      const newFile = Object.assign(file, {\n        preview: URL.createObjectURL(file),\n      });\n\n      if (file) {\n        setValue(\"avatar\", newFile, { shouldValidate: true });\n      }\n    },\n    [setValue]\n  );\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Stack spacing={4}>\n        <RHFUploadAvatar name=\"avatar\" maxSize={3145728} onDrop={handleDrop} />\n\n        <RHFTextField\n          name=\"firstName\"\n          label=\"First Name\"\n        />\n        <RHFTextField\n          name=\"lastName\"\n          label=\"Last Name\"\n        />\n        <RHFTextField multiline rows={4} name=\"about\" label=\"About\" />\n\n        <Stack direction={\"row\"} justifyContent=\"end\">\n          <LoadingButton\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          // loading={isSubmitSuccessful || isSubmitting}\n          >\n            Save\n          </LoadingButton>\n        </Stack>\n      </Stack>\n    </FormProvider>\n  );\n};\n\nexport default ProfileForm;\n","import React, { useEffect } from \"react\";\nimport { Box, IconButton, Stack, Typography } from \"@mui/material\";\nimport { CaretLeft } from \"phosphor-react\";\nimport ProfileForm from \"../../../sections/Dashboard/Settings/ProfileForm\";\nimport { useDispatch } from \"react-redux\";\nimport { FetchUserProfile } from \"../../../redux/slices/app\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  useEffect(() => {\n    dispatch(FetchUserProfile());\n  }, []);\n\n  return (\n    <>\n      <Stack direction=\"row\" sx={{ width: \"100%\" }}>\n        {/* Left Pane */}\n        <Box\n          sx={{\n            overflowY: \"scroll\",\n\n            height: \"100vh\",\n            width: 320,\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"light\"\n                ? \"#F8FAFF\"\n                : theme.palette.background,\n\n            boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\n          }}\n        >\n          <Stack p={4} spacing={5}>\n            {/* Header */}\n            <Stack direction=\"row\" alignItems={\"center\"} spacing={3}>\n              <IconButton onClick={() => navigate(-1)}>\n                <CaretLeft size={24} color={\"#4B4B4B\"} />\n              </IconButton>\n\n              <Typography variant=\"h5\">Profile</Typography>\n            </Stack>\n\n            {/* Profile Edit Form */}\n            <ProfileForm />\n          </Stack>\n        </Box>\n\n        {/* Right Pane */}\n        <Box\n          sx={{\n            height: \"100%\",\n            width: \"calc(100vw - 420px )\",\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"light\"\n                ? \"#FFF\"\n                : theme.palette.background.paper,\n            borderBottom: \"6px solid #0162C4\",\n          }}\n        ></Box>\n      </Stack>\n    </>\n  );\n};\n\nexport default Profile;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <polygon points=\"160 208 80 128 160 48 160 208\" opacity=\"0.2\" />\n    <polygon\n      points=\"160 208 80 128 160 48 160 208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M163.1,40.6a8.4,8.4,0,0,0-8.8,1.7l-80,80a8.1,8.1,0,0,0,0,11.4l80,80A8.3,8.3,0,0,0,160,216a8.5,8.5,0,0,0,3.1-.6A8,8,0,0,0,168,208V48A8,8,0,0,0,163.1,40.6Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst CaretLeft = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nCaretLeft.displayName = \"CaretLeft\";\n\nexport default CaretLeft;\n"],"names":["FormProvider","_ref","children","onSubmit","methods","_jsx","Form","forwardRef","ref","disabledEffect","effect","sx","other","content","Box","component","LazyLoadImage","wrapperClassName","undefined","placeholderSrc","width","height","objectFit","lineHeight","display","overflow","position","backgroundSize","AvatarPreview","file","imgUrl","preview","Image","alt","src","zIndex","borderRadius","StyledDropZone","styled","theme","margin","cursor","alignItems","justifyContent","border","concat","alpha","palette","grey","StyledPlaceholder","_ref2","flexDirection","color","text","disabled","backgroundColor","background","neutral","transition","transitions","create","easing","easeInOut","duration","shorter","UploadAvatar","_ref3","error","helperText","getRootProps","getInputProps","isDragActive","isDragReject","useDropzone","multiple","hasFile","isError","_jsxs","_Fragment","opacity","borderColor","bgcolor","pointerEvents","className","Typography","variant","RHFUploadAvatar","name","control","useFormContext","Controller","render","field","fieldState","accept","value","FormHelperText","px","textAlign","message","RHFTextField","TextField","fullWidth","ProfileForm","dispatch","useDispatch","navigate","useNavigate","setFile","useState","isModified","setModified","user","useSelector","state","app","ProfileSchema","Yup","shape","firstName","required","about","avatar","nullable","defaultValues","lastName","useForm","resolver","yupResolver","reset","watch","setValue","handleSubmit","formState","isSubmitting","isSubmitSuccessful","handleDrop","useCallback","acceptedFiles","console","log","newFile","Object","assign","URL","createObjectURL","shouldValidate","async","UpdateUserProfile","data","isPictureModified","then","Stack","spacing","maxSize","onDrop","label","multiline","rows","direction","LoadingButton","size","type","Profile","useEffect","FetchUserProfile","overflowY","mode","boxShadow","p","IconButton","onClick","CaretLeft","paper","borderBottom","pathsByWeight","Map","set","React","points","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","renderPath","weight","renderPathForWeight","props","IconBase","displayName"],"sourceRoot":""}