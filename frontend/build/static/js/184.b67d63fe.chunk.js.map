{"version":3,"file":"static/js/184.b67d63fe.chunk.js","mappings":"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","sources":["sections/auth/RegisterForm.js","pages/auth/Register.js"],"sourcesContent":["import { useState } from \"react\";\nimport * as Yup from \"yup\";\n// form\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n// @mui\nimport { Link, Stack, Alert, IconButton, InputAdornment } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\n// components\nimport FormProvider, { RHFTextField } from \"../../components/hook-form\";\nimport { Eye, EyeSlash } from \"phosphor-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RegisterUser } from \"../../redux/slices/auth\";\n\n// ----------------------------------------------------------------------\n\nexport default function AuthRegisterForm() {\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector((state) => state.auth);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const LoginSchema = Yup.object().shape({\n    firstName: Yup.string().required(\"First name required\"),\n    lastName: Yup.string().required(\"Last name required\"),\n    email: Yup.string()\n      .required(\"Email is required\")\n      .email(\"Email must be a valid email address\"),\n    password: Yup.string().required(\"Password is required\"),\n  });\n\n  const defaultValues = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"babble.io@gmail.com\",\n    password: \"123456\",\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(LoginSchema),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    setError,\n    handleSubmit,\n    formState: { errors },\n  } = methods;\n\n  const onSubmit = async (data) => {\n    try {\n      // submit data to backend\n      dispatch(RegisterUser(data));\n    } catch (error) {\n      console.error(error);\n      reset();\n      setError(\"afterSubmit\", {\n        ...error,\n        message: error.message,\n      });\n    }\n  };\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Stack spacing={3} mb={4}>\n        {!!errors.afterSubmit && (\n          <Alert severity=\"error\">{errors.afterSubmit.message}</Alert>\n        )}\n\n        <Stack direction={{ xs: \"column\", sm: \"row\" }} spacing={2}>\n          <RHFTextField name=\"firstName\" label=\"First name\" />\n          <RHFTextField name=\"lastName\" label=\"Last name\" />\n        </Stack>\n\n        <RHFTextField name=\"email\" label=\"Email address\" />\n\n        <RHFTextField\n          name=\"password\"\n          label=\"Password\"\n          type={showPassword ? \"text\" : \"password\"}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\"\n                sx={{\n                  \"height\": \"1em\",\n                  \"overflow\": \"visible\"\n                }}>\n                <IconButton\n                  onClick={() => setShowPassword(!showPassword)}\n                  edge=\"end\"\n                >\n                  {showPassword ? <Eye /> : <EyeSlash />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n      </Stack>\n\n      <LoadingButton\n        fullWidth\n        color=\"inherit\"\n        size=\"large\"\n        type=\"submit\"\n        variant=\"contained\"\n        loading={isLoading}\n        sx={{\n          bgcolor: \"text.primary\",\n          color: (theme) =>\n            theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\n          \"&:hover\": {\n            bgcolor: \"text.primary\",\n            color: (theme) =>\n              theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\n          },\n        }}\n      >\n        Create Account\n      </LoadingButton>\n    </FormProvider>\n  );\n}\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Stack, Typography, Link } from '@mui/material';\n\nimport RegisterForm from \"../../sections/auth/RegisterForm\";\nimport AuthSocial from '../../sections/auth/AuthSocial';\n\n// ----------------------------------------------------------------------\n\nexport default function Register() {\n  return (\n    <>\n      <Stack spacing={2} sx={{ mb: 5, position: 'relative' }}>\n        <Typography variant=\"h4\">Get started with Babble.</Typography>\n      </Stack>\n      {/* Form */}\n      <RegisterForm />\n\n      <Typography\n        component=\"div\"\n        sx={{ color: 'text.secondary', mt: 3, typography: 'caption', textAlign: 'center' }}\n      >\n        {'By signing up, I agree to '}\n        <Link underline=\"always\" color=\"text.primary\">\n          Terms of Service\n        </Link>\n        {' and '}\n        <Link underline=\"always\" color=\"text.primary\">\n          Privacy Policy\n        </Link>\n        .\n      </Typography>\n      <Stack direction=\"row\" spacing={0.5}>\n        <Typography variant=\"body2\"> Already have an account? </Typography>\n\n        <Link component={RouterLink} to={\"/auth/login\"} variant=\"subtitle2\">\n          Sign in\n        </Link>\n      </Stack>\n      <AuthSocial />\n    </>\n  );\n}\n"],"names":["AuthRegisterForm","dispatch","useDispatch","isLoading","useSelector","state","auth","showPassword","setShowPassword","useState","LoginSchema","Yup","shape","firstName","required","lastName","email","password","methods","useForm","resolver","yupResolver","defaultValues","reset","setError","handleSubmit","formState","errors","_jsxs","FormProvider","onSubmit","async","RegisterUser","data","error","console","message","children","Stack","spacing","mb","afterSubmit","_jsx","Alert","severity","direction","xs","sm","RHFTextField","name","label","type","InputProps","endAdornment","InputAdornment","position","sx","IconButton","onClick","edge","Eye","EyeSlash","LoadingButton","fullWidth","color","size","variant","loading","bgcolor","theme","palette","mode","Register","_Fragment","Typography","RegisterForm","component","mt","typography","textAlign","Link","underline","RouterLink","to","AuthSocial"],"sourceRoot":""}