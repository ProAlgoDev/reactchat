{"version":3,"file":"static/js/240.0a3c55cf.chunk.js","mappings":"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","sources":["components/hook-form/FormProvider.js","components/Image/Image.js","components/upload/preview/AvatarPreview.js","components/upload/UploadAvatar.js","components/hook-form/RHFUpload.js","components/hook-form/RHFTextField.js","sections/auth/NewPasswordForm.js","pages/auth/NewPassword.js","../node_modules/phosphor-react/src/icons/CaretLeft.tsx"],"sourcesContent":["import PropTypes from 'prop-types';\n// form\nimport { FormProvider as Form } from 'react-hook-form';\n\n// ----------------------------------------------------------------------\n\nFormProvider.propTypes = {\n  children: PropTypes.node,\n  methods: PropTypes.object,\n  onSubmit: PropTypes.func,\n};\n\nexport default function FormProvider({ children, onSubmit, methods }) {\n  return (\n    <Form {...methods}>\n      <form onSubmit={onSubmit}>{children}</form>\n    </Form>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n// @mui\nimport { Box } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst Image = forwardRef(\n  ({ disabledEffect = false, effect = 'blur', sx, ...other }, ref) => {\n    const content = (\n      <Box\n        component={LazyLoadImage}\n        wrapperClassName=\"wrapper\"\n        effect={disabledEffect ? undefined : effect}\n        placeholderSrc={disabledEffect ? '/assets/transparent.png' : '/assets/placeholder.svg'}\n        sx={{ width: 1, height: 1, objectFit: 'cover' }}\n        {...other}\n      />\n    );\n\n    return (\n      <Box\n        ref={ref}\n        component=\"span\"\n        sx={{\n          lineHeight: 1,\n          display: 'block',\n          overflow: 'hidden',\n          position: 'relative',\n          '& .wrapper': {\n            width: 1,\n            height: 1,\n            backgroundSize: 'cover !important',\n          },\n          ...sx,\n        }}\n      >\n        {content}\n      </Box>\n    );\n  }\n);\n\nImage.propTypes = {\n  sx: PropTypes.object,\n  effect: PropTypes.string,\n  disabledEffect: PropTypes.bool,\n};\n\nexport default Image;\n","import PropTypes from 'prop-types';\n//\nimport Image from '../../Image';\n\n// ----------------------------------------------------------------------\n\nAvatarPreview.propTypes = {\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default function AvatarPreview({ file }) {\n  if (!file) {\n    return null;\n  }\n\n  const imgUrl = typeof file === 'string' ? file : file.preview;\n\n  return (\n    <Image\n      alt=\"avatar\"\n      src={imgUrl}\n      sx={{\n        zIndex: 8,\n        overflow: 'hidden',\n        borderRadius: '50%',\n        position: 'absolute',\n        width: `calc(100% - 16px)`,\n        height: `calc(100% - 16px)`,\n      }}\n    />\n  );\n}\n","import PropTypes from \"prop-types\";\nimport { useDropzone } from \"react-dropzone\";\n// @mui\nimport { Typography } from \"@mui/material\";\nimport { styled, alpha } from \"@mui/material/styles\";\n//\nimport AvatarPreview from \"./preview/AvatarPreview\";\nimport { Image } from \"phosphor-react\";\n\n// ----------------------------------------------------------------------\n\nconst StyledDropZone = styled(\"div\")(({ theme }) => ({\n  width: 144,\n  height: 144,\n  margin: \"auto\",\n  display: \"flex\",\n  cursor: \"pointer\",\n  overflow: \"hidden\",\n  borderRadius: \"50%\",\n  alignItems: \"center\",\n  position: \"relative\",\n  justifyContent: \"center\",\n  border: `1px dashed ${alpha(theme.palette.grey[500], 0.32)}`,\n}));\n\nconst StyledPlaceholder = styled(\"div\")(({ theme }) => ({\n  zIndex: 7,\n  display: \"flex\",\n  borderRadius: \"50%\",\n  position: \"absolute\",\n  alignItems: \"center\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  width: `calc(100% - 16px)`,\n  height: `calc(100% - 16px)`,\n  color: theme.palette.text.disabled,\n  backgroundColor: theme.palette.background.neutral,\n  transition: theme.transitions.create(\"opacity\", {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter,\n  }),\n}));\n\n// ----------------------------------------------------------------------\n\nUploadAvatar.propTypes = {\n  sx: PropTypes.object,\n  error: PropTypes.bool,\n  disabled: PropTypes.bool,\n  helperText: PropTypes.node,\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default function UploadAvatar({\n  error,\n  file,\n  disabled,\n  helperText,\n  sx,\n  ...other\n}) {\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragReject,\n  } = useDropzone({\n    multiple: false,\n    disabled,\n    ...other,\n  });\n\n  const hasFile = !!file;\n\n  const isError = isDragReject || !!error;\n\n  return (\n    <>\n      <StyledDropZone\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && {\n            opacity: 0.72,\n          }),\n          ...(isError && {\n            borderColor: \"error.light\",\n            ...(hasFile && {\n              bgcolor: \"error.lighter\",\n            }),\n          }),\n          ...(disabled && {\n            opacity: 0.48,\n            pointerEvents: \"none\",\n          }),\n          ...(hasFile && {\n            \"&:hover\": {\n              \"& .placeholder\": {\n                opacity: 1,\n              },\n            },\n          }),\n          ...sx,\n        }}\n      >\n        <input {...getInputProps()} />\n\n        {hasFile && <AvatarPreview file={file} />}\n\n        <StyledPlaceholder\n          className=\"placeholder\"\n          sx={{\n            \"&:hover\": {\n              opacity: 0.72,\n            },\n            ...(hasFile && {\n              zIndex: 9,\n              opacity: 0,\n              color: \"common.white\",\n              bgcolor: (theme) => alpha(theme.palette.grey[900], 0.64),\n            }),\n            ...(isError && {\n              color: \"error.main\",\n              bgcolor: \"error.lighter\",\n            }),\n          }}\n        >\n          <Image />\n\n          <Typography variant=\"caption\">\n            {file ? \"Update photo\" : \"Upload photo\"}\n          </Typography>\n        </StyledPlaceholder>\n      </StyledDropZone>\n\n      {helperText && helperText}\n    </>\n  );\n}","import PropTypes from 'prop-types';\n// form\nimport { useFormContext, Controller } from 'react-hook-form';\n// @mui\nimport { FormHelperText } from '@mui/material';\n//\nimport { UploadAvatar } from '../upload';\n\n// ----------------------------------------------------------------------\n\nRHFUploadAvatar.propTypes = {\n  name: PropTypes.string,\n};\n\n// ----------------------------------------------------------------------\n\nexport function RHFUploadAvatar({ name, ...other }) {\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <div>\n          <UploadAvatar\n            accept={{\n              'image/*': [],\n            }}\n            error={!!error}\n            file={field.value}\n            {...other}\n          />\n\n          {!!error && (\n            <FormHelperText error sx={{ px: 2, textAlign: 'center' }}>\n              {error.message}\n            </FormHelperText>\n          )}\n        </div>\n      )}\n    />\n  );\n}\n\n","import PropTypes from 'prop-types';\n// form\nimport { useFormContext, Controller } from 'react-hook-form';\n// @mui\nimport { TextField } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nRHFTextField.propTypes = {\n  name: PropTypes.string,\n  helperText: PropTypes.node,\n};\n\nexport default function RHFTextField({ name, helperText, ...other }) {\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <TextField\n          {...field}\n          fullWidth\n          \n          value={typeof field.value === 'number' && field.value === 0 ? '' : field.value}\n          error={!!error}\n          helperText={error ? error?.message : helperText}\n          {...other}\n        />\n      )}\n    />\n  );\n}\n","import { useState } from 'react';\nimport * as Yup from 'yup';\n// form\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport { Stack, IconButton, InputAdornment, Button } from '@mui/material';\n// components\nimport FormProvider, { RHFTextField } from '../../components/hook-form';\nimport { Eye, EyeSlash } from 'phosphor-react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { NewPassword } from '../../redux/slices/auth';\n\n// ----------------------------------------------------------------------\n\nexport default function NewPasswordForm() {\n  const dispatch = useDispatch();\n  const [queryParameters] = useSearchParams();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const VerifyCodeSchema = Yup.object().shape({\n\n    password: Yup.string()\n      .min(6, 'Password must be at least 6 characters')\n      .required('Password is required'),\n    passwordConfirm: Yup.string()\n      .required('Confirm password is required')\n      .oneOf([Yup.ref('password'), null], 'Passwords must match'),\n  });\n\n  const defaultValues = {\n    password: '',\n    passwordConfirm: '',\n  };\n\n  const methods = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(VerifyCodeSchema),\n    defaultValues,\n  });\n\n  const {\n    handleSubmit,\n  } = methods;\n\n  const onSubmit = async (data) => {\n    try {\n      //   Send API Request\n      dispatch(NewPassword({ ...data, token: queryParameters.get('token') }));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Stack spacing={3}>\n\n\n        <RHFTextField\n          name=\"password\"\n          label=\"Password\"\n          type={showPassword ? 'text' : 'password'}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\"\n                sx={{\n                  \"height\": \"1em\",\n                  \"overflow\": \"visible\"\n                }}>\n                <IconButton\n                  onClick={() => setShowPassword(!showPassword)}\n                  edge=\"end\"\n                >\n                  {showPassword ? <Eye /> : <EyeSlash />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n\n        <RHFTextField\n          name=\"passwordConfirm\"\n          label=\"Confirm New Password\"\n          type={showPassword ? 'text' : 'password'}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\"\n                sx={{\n                  \"height\": \"1em\",\n                  \"overflow\": \"visible\"\n                }}>\n                <IconButton\n                  onClick={() => setShowPassword(!showPassword)}\n                  edge=\"end\"\n                >\n                  {showPassword ? <Eye /> : <EyeSlash />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n\n        <Button\n          fullWidth\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n\n          sx={{\n            mt: 3,\n            bgcolor: \"text.primary\",\n            color: (theme) =>\n              theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\n            \"&:hover\": {\n              bgcolor: \"text.primary\",\n              color: (theme) =>\n                theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\n            },\n          }}\n        >\n          Update Password\n        </Button>\n      </Stack>\n    </FormProvider>\n  );\n}\n","import { Stack, Typography, Link } from \"@mui/material\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport React from \"react\";\nimport { CaretLeft } from \"phosphor-react\";\nimport NewPasswordForm from \"../../sections/auth/NewPasswordForm\";\n\nconst NewPassword = () => {\n  return (\n    <>\n      <Stack spacing={2} sx={{ mb: 5, position: \"relative\" }}>\n        <Typography variant=\"h3\" paragraph>\n          Reset Password\n        </Typography>\n\n        <Typography sx={{ color: \"text.secondary\", mb: 5 }}>\n          Please set your new password.\n        </Typography>\n      </Stack>\n\n      {/* NewPasswordForm */}\n\n      <NewPasswordForm />\n\n      <Link\n        component={RouterLink}\n        to={\"/auth/login\"}\n        color=\"inherit\"\n        variant=\"subtitle2\"\n        sx={{\n          mt: 3,\n          mx: \"auto\",\n          alignItems: \"center\",\n          display: \"inline-flex\",\n        }}\n      >\n        <CaretLeft size={24} />\n        Return to sign in\n      </Link>\n    </>\n  );\n};\n\nexport default NewPassword;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <polygon points=\"160 208 80 128 160 48 160 208\" opacity=\"0.2\" />\n    <polygon\n      points=\"160 208 80 128 160 48 160 208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M163.1,40.6a8.4,8.4,0,0,0-8.8,1.7l-80,80a8.1,8.1,0,0,0,0,11.4l80,80A8.3,8.3,0,0,0,160,216a8.5,8.5,0,0,0,3.1-.6A8,8,0,0,0,168,208V48A8,8,0,0,0,163.1,40.6Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst CaretLeft = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nCaretLeft.displayName = \"CaretLeft\";\n\nexport default CaretLeft;\n"],"names":["FormProvider","_ref","children","onSubmit","methods","_jsx","Form","forwardRef","ref","disabledEffect","effect","sx","other","content","Box","component","LazyLoadImage","wrapperClassName","undefined","placeholderSrc","width","height","objectFit","lineHeight","display","overflow","position","backgroundSize","AvatarPreview","file","imgUrl","preview","Image","alt","src","zIndex","borderRadius","StyledDropZone","styled","theme","margin","cursor","alignItems","justifyContent","border","concat","alpha","palette","grey","StyledPlaceholder","_ref2","flexDirection","color","text","disabled","backgroundColor","background","neutral","transition","transitions","create","easing","easeInOut","duration","shorter","UploadAvatar","_ref3","error","helperText","getRootProps","getInputProps","isDragActive","isDragReject","useDropzone","multiple","hasFile","isError","_jsxs","_Fragment","opacity","borderColor","bgcolor","pointerEvents","className","Typography","variant","RHFUploadAvatar","name","control","useFormContext","Controller","render","field","fieldState","accept","value","FormHelperText","px","textAlign","message","RHFTextField","TextField","fullWidth","NewPasswordForm","dispatch","useDispatch","queryParameters","useSearchParams","showPassword","setShowPassword","useState","VerifyCodeSchema","Yup","shape","password","min","required","passwordConfirm","oneOf","useForm","mode","resolver","yupResolver","defaultValues","handleSubmit","async","NewPassword","data","token","get","console","Stack","spacing","label","type","InputProps","endAdornment","InputAdornment","IconButton","onClick","edge","Eye","EyeSlash","Button","size","mt","mb","paragraph","Link","RouterLink","to","mx","CaretLeft","pathsByWeight","Map","set","React","points","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","renderPath","weight","renderPathForWeight","props","IconBase","Object","assign","displayName"],"sourceRoot":""}