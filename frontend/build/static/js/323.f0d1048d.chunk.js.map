{"version":3,"file":"static/js/323.f0d1048d.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Badge/badgeClasses.js","../node_modules/@mui/material/Badge/Badge.js","../node_modules/@mui/base/useBadge/useBadge.js","../node_modules/@mui/utils/esm/usePreviousProps.js","../node_modules/phosphor-react/src/icons/MagnifyingGlass.tsx","../node_modules/phosphor-react/src/icons/Plus.tsx"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular',\n// TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"className\", \"classes\", \"component\", \"components\", \"componentsProps\", \"children\", \"overlap\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"slots\", \"slotProps\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { usePreviousProps } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { useBadge } from '@mui/base/useBadge';\nimport { useSlotProps } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  })\n}, ownerState.color !== 'default' && {\n  backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\n  color: (theme.vars || theme).palette[ownerState.color].contrastText\n}, ownerState.variant === 'dot' && {\n  borderRadius: RADIUS_DOT,\n  height: RADIUS_DOT * 2,\n  minWidth: RADIUS_DOT * 2,\n  padding: 0\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.invisible && {\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.leavingScreen\n  })\n}));\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _ref, _slots$root, _ref2, _slots$badge, _slotProps$root, _slotProps$badge;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n      anchorOrigin: anchorOriginProp = {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      className,\n      component,\n      components = {},\n      componentsProps = {},\n      children,\n      overlap: overlapProp = 'rectangular',\n      color: colorProp = 'default',\n      invisible: invisibleProp = false,\n      max: maxProp = 99,\n      badgeContent: badgeContentProp,\n      slots,\n      slotProps,\n      showZero = false,\n      variant: variantProp = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    badgeContent,\n    invisible: invisibleFromHook,\n    max,\n    displayValue: displayValueFromHook\n  } = useBadge({\n    max: maxProp,\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero\n  });\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp,\n    badgeContent: badgeContentProp\n  });\n  const invisible = invisibleFromHook || badgeContent == null && variantProp !== 'dot';\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const displayValue = variant !== 'dot' ? displayValueFromHook : undefined;\n  const ownerState = _extends({}, props, {\n    badgeContent,\n    invisible,\n    max,\n    displayValue,\n    showZero,\n    anchorOrigin,\n    color,\n    overlap,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n\n  // support both `slots` and `components` for backward compatibility\n  const RootSlot = (_ref = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components.Root) != null ? _ref : BadgeRoot;\n  const BadgeSlot = (_ref2 = (_slots$badge = slots == null ? void 0 : slots.badge) != null ? _slots$badge : components.Badge) != null ? _ref2 : BadgeBadge;\n  const rootSlotProps = (_slotProps$root = slotProps == null ? void 0 : slotProps.root) != null ? _slotProps$root : componentsProps.root;\n  const badgeSlotProps = (_slotProps$badge = slotProps == null ? void 0 : slotProps.badge) != null ? _slotProps$badge : componentsProps.badge;\n  const rootProps = useSlotProps({\n    elementType: RootSlot,\n    externalSlotProps: rootSlotProps,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref,\n      as: component\n    },\n    ownerState,\n    className: clsx(rootSlotProps == null ? void 0 : rootSlotProps.className, classes.root, className)\n  });\n  const badgeProps = useSlotProps({\n    elementType: BadgeSlot,\n    externalSlotProps: badgeSlotProps,\n    ownerState,\n    className: clsx(classes.badge, badgeSlotProps == null ? void 0 : badgeSlotProps.className)\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, _extends({}, rootProps, {\n    children: [children, /*#__PURE__*/_jsx(BadgeSlot, _extends({}, badgeProps, {\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","'use client';\n\nimport { usePreviousProps } from '@mui/utils';\n/**\n *\n * Demos:\n *\n * - [Badge](https://mui.com/base-ui/react-badge/#hook)\n *\n * API:\n *\n * - [useBadge API](https://mui.com/base-ui/react-badge/hooks-api/#use-badge)\n */\nexport function useBadge(parameters) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = parameters;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : parameters;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}","'use client';\n\nimport * as React from 'react';\nconst usePreviousProps = value => {\n  const ref = React.useRef({});\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\nexport default usePreviousProps;","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <circle\n      cx=\"116\"\n      cy=\"116\"\n      r=\"84\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"175.4\"\n      y1=\"175.4\"\n      x2=\"224\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <circle cx=\"116\" cy=\"116\" r=\"84\" opacity=\"0.2\" />\n    <circle\n      cx=\"116\"\n      cy=\"116\"\n      r=\"84\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"175.4\"\n      y1=\"175.4\"\n      x2=\"224\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M176,116a60,60,0,1,1-60-60A60,60,0,0,1,176,116Zm53.6,113.7A8,8,0,0,1,224,232a8.3,8.3,0,0,1-5.7-2.3l-43.2-43.3a92.2,92.2,0,1,1,11.3-11.3l43.2,43.2A8,8,0,0,1,229.6,229.7ZM116,192a76,76,0,1,0-76-76A76.1,76.1,0,0,0,116,192Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <circle\n      cx=\"116\"\n      cy=\"116\"\n      r=\"84\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"175.4\"\n      y1=\"175.4\"\n      x2=\"224\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <circle\n      cx=\"116\"\n      cy=\"116\"\n      r=\"84\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"175.4\"\n      y1=\"175.4\"\n      x2=\"224\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <circle\n      cx=\"116\"\n      cy=\"116\"\n      r=\"84\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"175.4\"\n      y1=\"175.4\"\n      x2=\"224\"\n      y2=\"224\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst MagnifyingGlass = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nMagnifyingGlass.displayName = \"MagnifyingGlass\";\n\nexport default MagnifyingGlass;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <line\n      x1=\"40\"\n      y1=\"128\"\n      x2=\"216\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"40\"\n      x2=\"128\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <line\n      x1=\"40\"\n      y1=\"128\"\n      x2=\"216\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"40\"\n      x2=\"128\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M216,120H136V40a8,8,0,0,0-16,0v80H40a8,8,0,0,0,0,16h80v80a8,8,0,0,0,16,0V136h80a8,8,0,0,0,0-16Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <line\n      x1=\"40\"\n      y1=\"128\"\n      x2=\"216\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"40\"\n      x2=\"128\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <line\n      x1=\"40\"\n      y1=\"128\"\n      x2=\"216\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"40\"\n      x2=\"128\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <line\n      x1=\"40\"\n      y1=\"128\"\n      x2=\"216\"\n      y2=\"128\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <line\n      x1=\"128\"\n      y1=\"40\"\n      x2=\"128\"\n      y2=\"216\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst Plus = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nPlus.displayName = \"Plus\";\n\nexport default Plus;\n"],"names":["getBadgeUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","BadgeRoot","styled","name","overridesResolver","props","styles","root","position","display","verticalAlign","flexShrink","BadgeBadge","ownerState","badge","variant","concat","capitalize","anchorOrigin","vertical","horizontal","overlap","color","invisible","_ref3","theme","_extends","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","RADIUS_STANDARD","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","backgroundColor","vars","palette","main","contrastText","RADIUS_DOT","top","right","transform","transformOrigin","badgeClasses","bottom","left","leavingScreen","React","inProps","ref","_ref","_slots$root","_ref2","_slots$badge","_slotProps$root","_slotProps$badge","useThemeProps","anchorOriginProp","className","component","components","componentsProps","children","overlapProp","colorProp","invisibleProp","max","maxProp","badgeContent","badgeContentProp","slots","slotProps","showZero","variantProp","other","_objectWithoutPropertiesLoose","invisibleFromHook","displayValue","displayValueFromHook","parameters","prevProps","usePreviousProps","Number","useBadge","undefined","classes","composeClasses","useUtilityClasses","RootSlot","Root","BadgeSlot","Badge","rootSlotProps","badgeSlotProps","rootProps","useSlotProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","as","clsx","badgeProps","_jsxs","_jsx","value","current","pathsByWeight","Map","set","cx","cy","r","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","x1","y1","x2","y2","opacity","d","renderPath","weight","renderPathForWeight","MagnifyingGlass","forwardRef","IconBase","Object","assign","displayName","Plus"],"sourceRoot":""}